Tank {
  Program   = Block
  Block     = (Statement "\n"*)+
  Statement = "let" VarExp ":" Type "=" Exp -- declAssign
            | "let" VarExp ":" Type -- decl
            | "let" VarExp "=" value -- declGuessType
            | VarExp "=" Exp -- Assign

  Exp       =  Exp "or" Exp1 -- or
            |  Exp1
  Exp1      =  Exp1 "and" Exp2 -- and
            |  Exp2
  Exp2      =  Exp3 compare Exp3 -- compare
            |  Exp3
  Exp3      =  Exp3 addop Exp4 -- add
            |  Exp4
  Exp4      =  Exp4 mulop Exp5 -- mul
            |  Exp5
  Exp5      =  prefixop OtherExp -- unary
            |  OtherExp
  OtherExp  =  boolean
            |  number
            |  VarExp
            |  "(" Exp ")" -- parens

  VarExp    = id
  Type      = "number" | "boolean" | "text"

  id        = ~keyword letter*
  keyword   = ("let" | "number" | "boolean" | "text")
  number    = digit+
  boolean   = ("true" | "false")
  value     = (number | boolean | id)
  compare   =  "<=" | "<" | "==" | "!=" | ">=" | ">"
  addop     =  "+" | "-"
  mulop     =  "*" | "/"
  prefixop  =  "-" | "not"
}
